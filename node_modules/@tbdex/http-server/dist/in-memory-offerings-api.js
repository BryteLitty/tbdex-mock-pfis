/**
 * An in-memory implementation of {@link OfferingsApi} for example and default purposes.
 * InMemoryOfferingsApi has additional methods {@link InMemoryOfferingsApi.addOffering}
 * and {@link InMemoryOfferingsApi.clearOfferings}
 */
export class InMemoryOfferingsApi {
    /** Map from offering_id to Offering */
    offeringsMap;
    constructor() {
        this.offeringsMap = new Map();
    }
    /**
     * Add a single offering
     * @param offering - Offering to be added to the {@link offeringsMap}
     */
    addOffering(offering) {
        this.offeringsMap.set(offering.metadata.id, offering);
    }
    /**
     * Clear existing list offerings
     */
    clearOfferings() {
        this.offeringsMap.clear();
    }
    /**
     * Retrieve a single offering if found
     * @param opts - Filter with id used to select an offering
     * @returns An offering if one exists, else undefined
     */
    async getOffering(opts) {
        return this.offeringsMap.get(opts.id);
    }
    /**
     *
     * @param opts - Filter used to select offerings
     * @returns A list of offerings matching the filter
     */
    async getOfferings() {
        return Array.from(this.offeringsMap.values());
    }
}
//# sourceMappingURL=in-memory-offerings-api.js.map