import { Offering } from '@tbdex/protocol';
import { OfferingsApi } from './types.js';
/**
 * An in-memory implementation of {@link OfferingsApi} for example and default purposes.
 * InMemoryOfferingsApi has additional methods {@link InMemoryOfferingsApi.addOffering}
 * and {@link InMemoryOfferingsApi.clearOfferings}
 */
export declare class InMemoryOfferingsApi implements OfferingsApi {
    /** Map from offering_id to Offering */
    offeringsMap: Map<string, Offering>;
    constructor();
    /**
     * Add a single offering
     * @param offering - Offering to be added to the {@link offeringsMap}
     */
    addOffering(offering: Offering): void;
    /**
     * Clear existing list offerings
     */
    clearOfferings(): void;
    /**
     * Retrieve a single offering if found
     * @param opts - Filter with id used to select an offering
     * @returns An offering if one exists, else undefined
     */
    getOffering(opts: {
        id: string;
    }): Promise<Offering | undefined>;
    /**
     *
     * @param opts - Filter used to select offerings
     * @returns A list of offerings matching the filter
     */
    getOfferings(): Promise<Offering[]>;
}
//# sourceMappingURL=in-memory-offerings-api.d.ts.map